{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[],"Cache":[{"_id":"source/_posts/test.md","hash":"dc46a289774738bab3e3f0f75bae66b85b46c706","modified":1514615828522},{"_id":"source/_posts/ubuntu.md","hash":"b69fc8d7ba88ab012ac0f25793dcf5ae177a4af4","modified":1514614508873},{"_id":"source/_posts/usehexo.md","hash":"f173788698aca663ff9975d7af8e9b60640a3ddd","modified":1514614508873},{"_id":"source/_posts/002.png","hash":"a0396d5ed7fd25fcf2c909ae4414402924dd5661","modified":1514614508873},{"_id":"source/_posts/001.png","hash":"81124afddec8b100edfc08e223c4df1339cfe4ca","modified":1514614508873},{"_id":"public/2017/12/30/test/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662125},{"_id":"public/2017/12/30/ubuntu/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662125},{"_id":"public/2017/12/30/usehexo/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662125},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662125},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662125},{"_id":"public/archives/2017/12/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662125},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514617662126}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"## 这是一个测试\n\n","source":"_posts/test.md","raw":"## 这是一个测试\n\n","slug":"test","published":1,"date":"2017-12-30T06:37:08.522Z","updated":"2017-12-30T06:37:08.522Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbt08zmu0000qlcvn77lvb2u","content":"<h2 id=\"这是一个测试\"><a href=\"#这是一个测试\" class=\"headerlink\" title=\"这是一个测试\"></a>这是一个测试</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"这是一个测试\"><a href=\"#这是一个测试\" class=\"headerlink\" title=\"这是一个测试\"></a>这是一个测试</h2>"},{"_content":"# ubuntu 下创建桌面快捷方式\n* 基本概念\n> Linux 系统中的Desktop Entry 文件以desktop为后缀名。Desktop Entry 文件是 Linux 桌面系统中用于描述程序启动配置信息的文件。\n进入/usr/share/applications 目录，可见如下图所示的各类软件图标\n如下图所示\n![Image text](002.png)\n其都是以desktop为结尾的文件格式\n![Image text](001.png)\n* 如何新建\n> 1. `vim /usr/share/applications/eclipse.desktop`\n> 2. 编辑eclipse.desktop\n> `[Desktop Entry]\nEncoding=UTF-8\nName=eclipse\nComment=Eclipse IDE\nExec=/usr/local/eclipse/eclipse  #根据软件的具体执行路径修改\nIcon=/usr/local/eclipse/icon.xpm  #根据软件的具体执行路径修改\nTerminal=false  #软件打开时是否启动终端\nStartupNotify=false\nType=Application\nCategories=Application;Development;`\n> 3. 进入`/usr/share/applications` 将相应图标右键复制到桌面即可\n","source":"_posts/ubuntu.md","raw":"# ubuntu 下创建桌面快捷方式\n* 基本概念\n> Linux 系统中的Desktop Entry 文件以desktop为后缀名。Desktop Entry 文件是 Linux 桌面系统中用于描述程序启动配置信息的文件。\n进入/usr/share/applications 目录，可见如下图所示的各类软件图标\n如下图所示\n![Image text](002.png)\n其都是以desktop为结尾的文件格式\n![Image text](001.png)\n* 如何新建\n> 1. `vim /usr/share/applications/eclipse.desktop`\n> 2. 编辑eclipse.desktop\n> `[Desktop Entry]\nEncoding=UTF-8\nName=eclipse\nComment=Eclipse IDE\nExec=/usr/local/eclipse/eclipse  #根据软件的具体执行路径修改\nIcon=/usr/local/eclipse/icon.xpm  #根据软件的具体执行路径修改\nTerminal=false  #软件打开时是否启动终端\nStartupNotify=false\nType=Application\nCategories=Application;Development;`\n> 3. 进入`/usr/share/applications` 将相应图标右键复制到桌面即可\n","slug":"ubuntu","published":1,"date":"2017-12-30T06:15:08.873Z","updated":"2017-12-30T06:15:08.873Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbt08zmz0001qlcv5np9npzv","content":"<h1 id=\"ubuntu-下创建桌面快捷方式\"><a href=\"#ubuntu-下创建桌面快捷方式\" class=\"headerlink\" title=\"ubuntu 下创建桌面快捷方式\"></a>ubuntu 下创建桌面快捷方式</h1><ul>\n<li>基本概念<blockquote>\n<p>Linux 系统中的Desktop Entry 文件以desktop为后缀名。Desktop Entry 文件是 Linux 桌面系统中用于描述程序启动配置信息的文件。<br>进入/usr/share/applications 目录，可见如下图所示的各类软件图标<br>如下图所示<br><img src=\"002.png\" alt=\"Image text\"><br>其都是以desktop为结尾的文件格式<br><img src=\"001.png\" alt=\"Image text\"></p>\n</blockquote>\n</li>\n<li>如何新建<blockquote>\n<ol>\n<li><code>vim /usr/share/applications/eclipse.desktop</code></li>\n<li>编辑eclipse.desktop<br><code>[Desktop Entry]\nEncoding=UTF-8\nName=eclipse\nComment=Eclipse IDE\nExec=/usr/local/eclipse/eclipse  #根据软件的具体执行路径修改\nIcon=/usr/local/eclipse/icon.xpm  #根据软件的具体执行路径修改\nTerminal=false  #软件打开时是否启动终端\nStartupNotify=false\nType=Application\nCategories=Application;Development;</code></li>\n<li>进入<code>/usr/share/applications</code> 将相应图标右键复制到桌面即可</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ubuntu-下创建桌面快捷方式\"><a href=\"#ubuntu-下创建桌面快捷方式\" class=\"headerlink\" title=\"ubuntu 下创建桌面快捷方式\"></a>ubuntu 下创建桌面快捷方式</h1><ul>\n<li>基本概念<blockquote>\n<p>Linux 系统中的Desktop Entry 文件以desktop为后缀名。Desktop Entry 文件是 Linux 桌面系统中用于描述程序启动配置信息的文件。<br>进入/usr/share/applications 目录，可见如下图所示的各类软件图标<br>如下图所示<br><img src=\"002.png\" alt=\"Image text\"><br>其都是以desktop为结尾的文件格式<br><img src=\"001.png\" alt=\"Image text\"></p>\n</blockquote>\n</li>\n<li>如何新建<blockquote>\n<ol>\n<li><code>vim /usr/share/applications/eclipse.desktop</code></li>\n<li>编辑eclipse.desktop<br><code>[Desktop Entry]\nEncoding=UTF-8\nName=eclipse\nComment=Eclipse IDE\nExec=/usr/local/eclipse/eclipse  #根据软件的具体执行路径修改\nIcon=/usr/local/eclipse/icon.xpm  #根据软件的具体执行路径修改\nTerminal=false  #软件打开时是否启动终端\nStartupNotify=false\nType=Application\nCategories=Application;Development;</code></li>\n<li>进入<code>/usr/share/applications</code> 将相应图标右键复制到桌面即可</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n"},{"_content":"## 写在前面\n> 首先这篇文章是为自己而写的，因为自己的邋遢。一直没有一个良好的整理文件整理思路的习惯。尝试过桌面备份很多软件，包括坚果云，百度云等等。其实效果都不太理想，随着备份文件夹的不断增多，内容也变得越来越凌乱了，直到最终全部清空，一趟下来其实并没有什么实际效果。\n> z这是我第一次使用atom编辑器，第一次写ｍｄ，也是在ｈｅｘｏ下的第一篇文章。\n\n## 良好的开始\n> 我希望这篇博客只是开始，而不是结束。我希望随着不断的记录，能够一次次的提升自身的能力，不论是语言组着能力，还是专业只是水平。当然我也希望这里能够为有需要的他人提供便利\n\n## 关于hexo\n> 这是我第一次接触hexo这个微博框架，在接触不久之后便喜欢上了它，其可定制性强，界面华丽而风骚，也免去了自己搭建微博服务器的人力无力，非常适合需要长期记录的人，又不受相关平台的约束，所以这里是极力推荐的。\n\n## 跨平台/多终端\n> hexo非常适合与跨平台或者在多台电脑上同时记录的情况，以为在执行ｈｅｘｏ　ｄ 的时候默认提交ｍａｓｔｅｒ分支的，此分支保存的是编译生成的静态网页。所以我们可以在项目中新建一个分支，例如hexo分支并将其作为默认分支，这样我们就可以使用这个分支来保存ｈｅｘｏ的配置文件和原始的ｍｄ文件了。在不同的电脑使用同步时只需要ｇｉｔ pull　就ＯＫ了。\n\n## 修改页面提交至hexo分支\n> 此处主要是ｇｉｔ的基本使用　\n> * 　ｇｉｔ　add .\n> * git commit -m \"first commit\"\n> * git push 上传到远端\n\n## 更新改动到博客\n> hexo clean && hexo g && hexo d\n>如果选在在本地服务器查看的话可以直接使用hexo s命令，生成页面在localhost:4000下查看。\n","source":"_posts/usehexo.md","raw":"## 写在前面\n> 首先这篇文章是为自己而写的，因为自己的邋遢。一直没有一个良好的整理文件整理思路的习惯。尝试过桌面备份很多软件，包括坚果云，百度云等等。其实效果都不太理想，随着备份文件夹的不断增多，内容也变得越来越凌乱了，直到最终全部清空，一趟下来其实并没有什么实际效果。\n> z这是我第一次使用atom编辑器，第一次写ｍｄ，也是在ｈｅｘｏ下的第一篇文章。\n\n## 良好的开始\n> 我希望这篇博客只是开始，而不是结束。我希望随着不断的记录，能够一次次的提升自身的能力，不论是语言组着能力，还是专业只是水平。当然我也希望这里能够为有需要的他人提供便利\n\n## 关于hexo\n> 这是我第一次接触hexo这个微博框架，在接触不久之后便喜欢上了它，其可定制性强，界面华丽而风骚，也免去了自己搭建微博服务器的人力无力，非常适合需要长期记录的人，又不受相关平台的约束，所以这里是极力推荐的。\n\n## 跨平台/多终端\n> hexo非常适合与跨平台或者在多台电脑上同时记录的情况，以为在执行ｈｅｘｏ　ｄ 的时候默认提交ｍａｓｔｅｒ分支的，此分支保存的是编译生成的静态网页。所以我们可以在项目中新建一个分支，例如hexo分支并将其作为默认分支，这样我们就可以使用这个分支来保存ｈｅｘｏ的配置文件和原始的ｍｄ文件了。在不同的电脑使用同步时只需要ｇｉｔ pull　就ＯＫ了。\n\n## 修改页面提交至hexo分支\n> 此处主要是ｇｉｔ的基本使用　\n> * 　ｇｉｔ　add .\n> * git commit -m \"first commit\"\n> * git push 上传到远端\n\n## 更新改动到博客\n> hexo clean && hexo g && hexo d\n>如果选在在本地服务器查看的话可以直接使用hexo s命令，生成页面在localhost:4000下查看。\n","slug":"usehexo","published":1,"date":"2017-12-30T06:15:08.873Z","updated":"2017-12-30T06:15:08.873Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbt08zn00002qlcvcvle21zr","content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><blockquote>\n<p>首先这篇文章是为自己而写的，因为自己的邋遢。一直没有一个良好的整理文件整理思路的习惯。尝试过桌面备份很多软件，包括坚果云，百度云等等。其实效果都不太理想，随着备份文件夹的不断增多，内容也变得越来越凌乱了，直到最终全部清空，一趟下来其实并没有什么实际效果。<br>z这是我第一次使用atom编辑器，第一次写ｍｄ，也是在ｈｅｘｏ下的第一篇文章。</p>\n</blockquote>\n<h2 id=\"良好的开始\"><a href=\"#良好的开始\" class=\"headerlink\" title=\"良好的开始\"></a>良好的开始</h2><blockquote>\n<p>我希望这篇博客只是开始，而不是结束。我希望随着不断的记录，能够一次次的提升自身的能力，不论是语言组着能力，还是专业只是水平。当然我也希望这里能够为有需要的他人提供便利</p>\n</blockquote>\n<h2 id=\"关于hexo\"><a href=\"#关于hexo\" class=\"headerlink\" title=\"关于hexo\"></a>关于hexo</h2><blockquote>\n<p>这是我第一次接触hexo这个微博框架，在接触不久之后便喜欢上了它，其可定制性强，界面华丽而风骚，也免去了自己搭建微博服务器的人力无力，非常适合需要长期记录的人，又不受相关平台的约束，所以这里是极力推荐的。</p>\n</blockquote>\n<h2 id=\"跨平台-多终端\"><a href=\"#跨平台-多终端\" class=\"headerlink\" title=\"跨平台/多终端\"></a>跨平台/多终端</h2><blockquote>\n<p>hexo非常适合与跨平台或者在多台电脑上同时记录的情况，以为在执行ｈｅｘｏ　ｄ 的时候默认提交ｍａｓｔｅｒ分支的，此分支保存的是编译生成的静态网页。所以我们可以在项目中新建一个分支，例如hexo分支并将其作为默认分支，这样我们就可以使用这个分支来保存ｈｅｘｏ的配置文件和原始的ｍｄ文件了。在不同的电脑使用同步时只需要ｇｉｔ pull　就ＯＫ了。</p>\n</blockquote>\n<h2 id=\"修改页面提交至hexo分支\"><a href=\"#修改页面提交至hexo分支\" class=\"headerlink\" title=\"修改页面提交至hexo分支\"></a>修改页面提交至hexo分支</h2><blockquote>\n<p>此处主要是ｇｉｔ的基本使用　</p>\n<ul>\n<li>　ｇｉｔ　add .</li>\n<li>git commit -m “first commit”</li>\n<li>git push 上传到远端</li>\n</ul>\n</blockquote>\n<h2 id=\"更新改动到博客\"><a href=\"#更新改动到博客\" class=\"headerlink\" title=\"更新改动到博客\"></a>更新改动到博客</h2><blockquote>\n<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>如果选在在本地服务器查看的话可以直接使用hexo s命令，生成页面在localhost:4000下查看。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><blockquote>\n<p>首先这篇文章是为自己而写的，因为自己的邋遢。一直没有一个良好的整理文件整理思路的习惯。尝试过桌面备份很多软件，包括坚果云，百度云等等。其实效果都不太理想，随着备份文件夹的不断增多，内容也变得越来越凌乱了，直到最终全部清空，一趟下来其实并没有什么实际效果。<br>z这是我第一次使用atom编辑器，第一次写ｍｄ，也是在ｈｅｘｏ下的第一篇文章。</p>\n</blockquote>\n<h2 id=\"良好的开始\"><a href=\"#良好的开始\" class=\"headerlink\" title=\"良好的开始\"></a>良好的开始</h2><blockquote>\n<p>我希望这篇博客只是开始，而不是结束。我希望随着不断的记录，能够一次次的提升自身的能力，不论是语言组着能力，还是专业只是水平。当然我也希望这里能够为有需要的他人提供便利</p>\n</blockquote>\n<h2 id=\"关于hexo\"><a href=\"#关于hexo\" class=\"headerlink\" title=\"关于hexo\"></a>关于hexo</h2><blockquote>\n<p>这是我第一次接触hexo这个微博框架，在接触不久之后便喜欢上了它，其可定制性强，界面华丽而风骚，也免去了自己搭建微博服务器的人力无力，非常适合需要长期记录的人，又不受相关平台的约束，所以这里是极力推荐的。</p>\n</blockquote>\n<h2 id=\"跨平台-多终端\"><a href=\"#跨平台-多终端\" class=\"headerlink\" title=\"跨平台/多终端\"></a>跨平台/多终端</h2><blockquote>\n<p>hexo非常适合与跨平台或者在多台电脑上同时记录的情况，以为在执行ｈｅｘｏ　ｄ 的时候默认提交ｍａｓｔｅｒ分支的，此分支保存的是编译生成的静态网页。所以我们可以在项目中新建一个分支，例如hexo分支并将其作为默认分支，这样我们就可以使用这个分支来保存ｈｅｘｏ的配置文件和原始的ｍｄ文件了。在不同的电脑使用同步时只需要ｇｉｔ pull　就ＯＫ了。</p>\n</blockquote>\n<h2 id=\"修改页面提交至hexo分支\"><a href=\"#修改页面提交至hexo分支\" class=\"headerlink\" title=\"修改页面提交至hexo分支\"></a>修改页面提交至hexo分支</h2><blockquote>\n<p>此处主要是ｇｉｔ的基本使用　</p>\n<ul>\n<li>　ｇｉｔ　add .</li>\n<li>git commit -m “first commit”</li>\n<li>git push 上传到远端</li>\n</ul>\n</blockquote>\n<h2 id=\"更新改动到博客\"><a href=\"#更新改动到博客\" class=\"headerlink\" title=\"更新改动到博客\"></a>更新改动到博客</h2><blockquote>\n<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>如果选在在本地服务器查看的话可以直接使用hexo s命令，生成页面在localhost:4000下查看。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}